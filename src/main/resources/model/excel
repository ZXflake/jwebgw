//一般引入文件
import configuration.file.IniDataByExcelFileModel;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import system.base.annotation.H;
import system.base.annotation.M;
import system.web.JWeb;
import system.web.WebContext;
import system.web.file.FI;
import system.web.file.engine.FileEngine;
import configuration.DBO;

/**
 *
 * @author wangchunzi
 */
@H("/fileup/inidata")
public class ${bean.mybean_mc}ExcelUp {

    JWeb jw;

    public ${bean.mybean_mc}ExcelUp(JWeb jw) {
        this.jw = jw;
    }
    @M("/fileup/excel")//fileup/excel.jw 
    //@system.web.power.ann.ZDY(zdy = power.hm.zdy.SQ_UA.class, value = "C2_1")
    public void up() {
        FileEngine file = new FileEngine(jw.request);
        FI upOne = file.upOne(IniDataByExcelFileModel.class);
        ExcelTool et = new ExcelTool();
        List<${bean.mybean_mc}> list = et.readExcelData(${bean.mybean_mc}.class, getClassMapShowName(), WebContext.getWebContext().WEB_PATH + upOne.path_saveName);
        //返回json数据。注意,FI对象重写了toString,此方法现在返回的是json数据
        for (${bean.mybean_mc} obj : list) {
             jw.printOne(DBO.getJSONModel("-1", "执行出错，xxxx（不能为空）。"));//校对基本数据与格式是否符合
             return;
        }
//如果需要人性化，请一条条添加入数据库
        int i = DBO.service.A.addVast(list);
        if (i == -1) {
            jw.printOne(DBO.getJSONModel("-1", "执行出错，请检查数据唯一性或合法性。"));
            return;
        }
        jw.printOne(i == 0 ? DBO.getJSONModel("0", "执行失败，请检查数据格式")
                : DBO.getJSONModel("1", "执行成功。"));

    }

    private Map<String, String> getClassMapShowName() {

        Map<String, String> map = new HashMap();
#foreach($field in $fields)
        map.put("${field.c_bz}", "${field.c_mc}");
#end
        return map;
    }
}